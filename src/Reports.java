
import java.awt.print.Printable;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

/**
 *
 * @author Sandun Chandrasiri (K2322528 / E119775)
 */
public class Reports extends javax.swing.JFrame {
    
    ArrayList<BillingInfo> allRecord = new ArrayList<>();
    ArrayList<Treatment> allTreatments = new ArrayList<>();
    ArrayList<Appointment> allAppointments = new ArrayList<>();

    /**
     * Creates new form Reports
     */
    public Reports() {
        initComponents();
        readAllPData();
        readAllMData();
        readAllRData();
    }
    
    void readAllPData(){
        try {
            File pfile = new File("pdata.txt");
            Scanner scanner =new Scanner(pfile);
            
            while (scanner.hasNextLine()) {
                
                String data = scanner.nextLine();
                String[] curData = data.split(";");
                Appointment appointment = new Appointment();
                
                appointment.setId(Integer.parseInt(curData[0]));
                appointment.setName(curData[1]);
                appointment.setAge(Integer.parseInt(curData[2]));
                appointment.setGender(curData[3]);
                appointment.setAddress(curData[4]);
                appointment.setContact(curData[5]);
                
                allAppointments.add(appointment);               
            }
            
            scanner.close();
            
        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception properly, print the stack trace for debugging
        }
    }
    
    void readAllMData(){
        try {
            File pfile = new File("mdata.txt");
            Scanner scanner =new Scanner(pfile);
            
            while (scanner.hasNextLine()) {
                
                String data = scanner.nextLine();
                String[] curData = data.split(";");
                Treatment treatments = new Treatment();
                
                treatments.setId(Integer.parseInt(curData[0]));
                treatments.setName(curData[1]);
                treatments.setSellingPrice(Integer.parseInt(curData[2]));
                treatments.setDescription(curData[3]);
                
                allTreatments.add(treatments);               
            }
            
            scanner.close();
            
        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception properly, print the stack trace for debugging
        }
    }
    
    void readAllRData(){
        try {
            File pfile = new File("record.txt");
            Scanner scanner =new Scanner(pfile);
            
            while (scanner.hasNextLine()) {
                
                String data = scanner.nextLine();
                String[] curData = data.split(";");
                BillingInfo record = new BillingInfo();
                
                record.setAppointmentID(Integer.parseInt(curData[0]));
                record.setFee(Integer.parseInt(curData[1]));
                record.setRecomendations(curData[2]);
                record.setDate(curData[3]);
                
                String[] treatmentList = curData[4].split(";");
                List<Integer> treatmentIDs = new ArrayList<>();

                for (int i = 0; i < treatmentList.length - 1; i++) {
                    treatmentIDs.add(Integer.parseInt(treatmentList[i]));
                }
                
                record.setTreatmentID(treatmentIDs);
                record.setTreatmentTotal(Integer.parseInt(curData[4]));
                
                allRecord.add(record);               
            }
            
            scanner.close();
            
        } catch (Exception e) {
            e.printStackTrace(); // Handle the exception properly, print the stack trace for debugging
        }
    }
    
    Appointment getPData(int currentID){
        for(int i=0;i<allAppointments.size();i++){
            if(allAppointments.get(i).getId()==currentID){
                return allAppointments.get(i);
            }
        }
        return null;
    }
    
    Treatment getMData(int currentID){
        for(int i=0;i<allTreatments.size();i++){
            if(allTreatments.get(i).getId()==currentID){
                return allTreatments.get(i);
            }
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        showRecords = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo 4.jpg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 51));
        jLabel2.setText("Reports Menu");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Tooth Care Management System");

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 204, 51));
        jButton3.setText("HOME");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(42, 42, 42))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        showRecords.setColumns(20);
        showRecords.setRows(5);
        jScrollPane1.setViewportView(showRecords);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 255));
        jButton1.setText("GET RECORD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Enter Appointment ID for search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4)
                        .addGap(40, 40, 40)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(816, 534));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (id.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter ID !");
        }
        else{
            for(int i=0;i<allRecord.size();i++){
                if (allRecord.get(i).getAppointmentID() == Integer.parseInt(id.getText())) {
                    
                    showRecords.append("\n\nPatient Info \n");
                    
                    Appointment appointment = getPData(allRecord.get(i).getAppointmentID());
                    
                    showRecords.append("Patient Name = "+appointment.getName()+"\n");
                    showRecords.append("Patient Contact = "+appointment.getContact()+"\n");
                    showRecords.append("\n All recomended Treatments \n");
                    
                    List<Integer> tmp = allRecord.get(i).getTreatmentID();

                    int treatmentTotal = allRecord.get(i).getTreatmentTotal();  // treatmentTotal from the record
                    int fee = allRecord.get(i).getFee();  // fee from the record
                    
                    for(int j=0;j<tmp.size();j++){
                        Treatment treatment = getMData(tmp.get(j));
                        showRecords.append(treatment.getName()+"\n");
                    }
                    
                    showRecords.append("\nTreatment Total Cost = " + treatmentTotal);
                    showRecords.append("\nFee = " + fee);

                    // Calculate total (treatmentTotal + fee)
                    int total = treatmentTotal + fee;
                    showRecords.append("\nTotal Cost (Treatment + Fee) = " + total);

                    showRecords.append("\n Date "+allRecord.get(i).getDate());
                    showRecords.append("\n Recomendation "+allRecord.get(i).getRecomendations());
                    showRecords.append("\n ***************************************************************** \n");

                    // Prompt to print
                    int printConfirmation = JOptionPane.showConfirmDialog(this, "Do you want to print the invoice?", "Print Confirmation", JOptionPane.YES_NO_OPTION);

                    if (printConfirmation == JOptionPane.YES_OPTION) {
                        // Initiate printing
                        printInvoice(showRecords.getText());
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void printInvoice(String invoiceText) {

        final JTextArea printableArea = showRecords; // Create a final variable
        
        PrinterJob job = PrinterJob.getPrinterJob();

        job.setPrintable((graphics, pageFormat, pageIndex) -> {
            if (pageIndex > 0) {
                return Printable.NO_SUCH_PAGE;
            }

            graphics.drawString(invoiceText, 100, 100); // Adjust coordinates as needed

            return Printable.PAGE_EXISTS;
        });

        try {
            if (job.printDialog()) {
                job.print();
            }
        } catch (PrinterException e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea showRecords;
    // End of variables declaration//GEN-END:variables
}
